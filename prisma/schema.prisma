generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id        String    @id @default(cuid())
  image     String
  caption   String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@map(name: "posts")
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map(name: "comments")
}

model User {
  id          String    @id @default(cuid())
  name        String
  email       String    @unique
  password    String
  image       String?
  description String?
  posts       Post[]
  comments    Comment[]
  followers   Follow[]  @relation("UserFollowers")
  following   Follow[]  @relation("UserFollowing")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map(name: "users")
}

model Follow {
  id          String   @id @default(cuid())
  follower    User     @relation("UserFollowing", fields: [followerId], references: [id], onDelete: Cascade)
  followerId  String
  following   User     @relation("UserFollowers", fields: [followingId], references: [id], onDelete: Cascade)
  followingId String
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
  @@map(name: "follows")
}
